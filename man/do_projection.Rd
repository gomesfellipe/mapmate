% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{do_projection}
\alias{do_projection}
\title{Project points onto globe}
\usage{
do_projection(data, id, lon = 0, lat = 0, n.period = 360,
  n.frames = n.period, keep = FALSE)
}
\arguments{
\item{data}{a data frame.}

\item{id}{character, column name referring to column of \code{data} representing frame sequence integer IDs.}

\item{lon}{starting longitude for rotation sequence or vector of arbitrary longitude sequence.}

\item{lat}{fixed latitude or vector of arbitrary latitude sequence.}

\item{n.period}{intended length of the period.}

\item{n.frames}{intended number of frames in animation.}

\item{keep, }{if \code{TRUE}, return the entire input data drame (no subsetting) along with the boolean \code{inview} column.
Otherwise only return the row-filtered data frame with its original columns. Defaults to \code{FALSE}.}
}
\value{
returns a data frame containing visible points on the globe or all points along with a boolean \code{inview} column.
}
\description{
Project points in \code{data} onto the globe and filter \code{data} to points within the current field of view.
}
\details{
\code{do_projection} projects the coordinates in \code{data} onto the globe and filters \code{data} to the subset of rows
containing data which are visible given the current field of view.
The field of view is defined by the centroid focus latitude and longitude pair in the sequence of latitudes and longitudes whose index
corresponds to the frame ID in \code{data}. \code{data} may containing rows with multiple unique frame ID values,
which the function will group the data by.
These values are used to determine position in the user-defined lon/lat sequence and the corresponding in-view subset of data
for each subset of \code{data} grouped by the `id` variable.
}
\examples{
\dontshow{
library(dplyr)
library(purrr)
}
library(dplyr)
library(purrr)
data(annualtemps)
temps <- mutate(annualtemps, frameID = Year - min(Year) + 1)
do_projection(temps, id="frameID")
do_projection(temps, id="frameID", keep=TRUE)
}
